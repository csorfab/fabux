{
    "extends": [
      "./node_modules/gts/",
      "plugin:react/recommended",
      "plugin:react-hooks/recommended"
    ],
    "rules": {
      "import/no-cycle": [2, { "maxDepth": 3, "ignoreExternal": true }],
      "import/no-duplicates": "off",
      "import/no-named-as-default-member": "off",
      "quotes": [
        "warn",
        "double",
        {
          "avoidEscape": true
        }
      ],
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "args": "none",
          "ignoreRestSiblings": true
        }
      ],
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "react/prop-types": "off",
      "react/react-in-jsx-scope": "off",
      "react/display-name": "off"
    },
    "parserOptions": {
      "sourceType": "module"
    },
    "settings": {
      "react": {
        // "createClass": "createReactClass", // Regex for Component Factory to use,
        // default to "createReactClass"
        "pragma": "React", // Pragma to use, default to "React"
        "version": "detect", // React version. "detect" automatically picks the version you have installed.
        // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
        // default to latest and warns if missing
        // It will default to "detect" in the future
        "flowVersion": "0.53" // Flow version
      },
      "propWrapperFunctions": [
        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
        "forbidExtraProps",
        {
          "property": "freeze",
          "object": "Object"
        },
        {
          "property": "myFavoriteWrapper"
        }
      ],
      "linkComponents": [
        // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
        "Hyperlink",
        {
          "name": "Link",
          "linkAttribute": "to"
        }
      ],
      "import/resolver": {
        "typescript": {
          "alwaysTryTypes": true,
          "project": "./tsconfig.json"
        }
      },
      "webpack": {}
    },
    "plugins": [
      "react",
      "import"
    ],
    "ignorePatterns": "dist/"
  }
  